-------------------------------------------------------------------------------
---   Modular Simulator Controller System - Action Callbacks Script         ---
---                                                                         ---
---   Author:     Oliver Juwig (TheBigO)                                    ---
---   License:    (2025) Creative Commons - BY-NC-SA                        ---
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
---                           Public Modules Section                        ---
-------------------------------------------------------------------------------

Assistant = {}
Controller = {}
Function = {}
Rules = {}


-------------------------------------------------------------------------------
---                          Public Functions Section                       ---
-------------------------------------------------------------------------------

function Assistant.Ask(question)
	return __Assistant_Ask(question)
end

function Assistant.Speak(message, ...)
	local arguments = table.pack(...)
	
	assert(#arguments == 0 or (#arguments == 1 and type(arguments[1]) == "boolean"))
	
	return __Assistant_Speak(message, table.unpack(arguments))
end

function Assistant.Raise(event, ...)
	local arguments = table.pack(...)
	
	for i, v in ipairs(arguments) do
		arguments[i] = tostring(v)
	end
	
	return __Assistant_Raise(event, table.unpack(arguments))
end

function Assistant.Call(func, ...)
	local arguments = table.pack(...)
	
	for i, v in ipairs(arguments) do
		arguments[i] = tostring(v)
	end
	
	return __Assistant_Call(func, table.unpack(arguments))
end

function Controller.Call(func, ...)
	local arguments = table.pack(...)
	
	for i, v in ipairs(arguments) do
		arguments[i] = tostring(v)
	end
	
	return __Controller_Call(func, table.unpack(arguments))
end

function Function.Call(func, ...)
	local arguments = table.pack(...)
	
	for i, v in ipairs(arguments) do
		arguments[i] = tostring(v)
	end
	
	return __Function_Call(func, table.unpack(arguments))
end

function Rules.GetValue(name, ...)
	local arguments = table.pack(...)
	local value = __Rules_GetValue(name)
	
	assert(#arguments <= 1)
	
	if (value == nil or value == __NotInitialized or value == __Undefined) and #arguments == 1 then
		value = arguments[1]
	end
		
	return value
end

function Rules.SetValue(name, value)
	__Rules_SetValue(name, tostring(value))
end

function Rules.Execute()
	__Rules_Execute()
end
	